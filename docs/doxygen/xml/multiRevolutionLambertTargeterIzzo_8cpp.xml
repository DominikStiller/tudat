<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="multiRevolutionLambertTargeterIzzo_8cpp" kind="file" language="C++">
    <compoundname>multiRevolutionLambertTargeterIzzo.cpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">boost/math/special_functions.hpp</includes>
    <includes refid="mathematicalConstants_8h" local="yes">tudat/math/basic/mathematicalConstants.h</includes>
    <includes refid="multiRevolutionLambertTargeterIzzo_8h" local="yes">tudat/astro/mission_segments/multiRevolutionLambertTargeterIzzo.h</includes>
    <includes refid="convergenceException_8h" local="yes">tudat/math/basic/convergenceException.h</includes>
    <incdepgraph>
      <node id="3">
        <label>boost/math/special_functions.hpp</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="9">
        <label>tudat/astro/mission_segments/zeroRevolutionLambertTargeterIzzo.h</label>
        <link refid="zeroRevolutionLambertTargeterIzzo_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>tudat/astro/mission_segments/multiRevolutionLambertTargeterIzzo.h</label>
        <link refid="multiRevolutionLambertTargeterIzzo_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>Eigen/Core</label>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/astro/mission_segments/multiRevolutionLambertTargeterIzzo.cpp</label>
        <link refid="multiRevolutionLambertTargeterIzzo_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tudat/astro/mission_segments/lambertTargeter.h</label>
        <link refid="lambertTargeter_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tudat/math/basic/convergenceException.h</label>
        <link refid="convergenceException_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tudat/math/basic/mathematicalConstants.h</label>
        <link refid="mathematicalConstants_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetudat">tudat</innernamespace>
    <innernamespace refid="namespacetudat_1_1mission__segments">tudat::mission_segments</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2010-2019,<sp/>Delft<sp/>University<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>All<sp/>rigths<sp/>reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Tudat.<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>exclusively</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Modified<sp/>BSD<sp/>license.<sp/>You<sp/>should<sp/>have<sp/>received</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>the<sp/>license<sp/>with<sp/>this<sp/>file.<sp/>If<sp/>not,<sp/>please<sp/>or<sp/>visit:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>http://tudat.tudelft.nl/LICENSE.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>References</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>PyKEP<sp/>toolbox,<sp/>Dario<sp/>Izzo,<sp/>ESA<sp/>Advanced<sp/>Concepts<sp/>Team.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Richard<sp/>H.<sp/>An<sp/>Introduction<sp/>to<sp/>the<sp/>math<sp/>and<sp/>Methods<sp/>of<sp/>astro,<sp/>Revised</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Edition.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Battin,<sp/>AIAA<sp/>Education<sp/>Series.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/math/special_functions.hpp&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>asinh<sp/>and<sp/>acosh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/math/basic/mathematicalConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/astro/mission_segments/multiRevolutionLambertTargeterIzzo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/math/basic/convergenceException.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mission_segments</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a043cf2017321acf61c66d0e1b3854cd2" kindref="member">MultiRevolutionLambertTargeterIzzo::computeForRevolutionsAndBranch</ref>(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aNumberOfRevolutions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aIsRightBranch<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>parameters<sp/>for<sp/>new<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>=<sp/>aNumberOfRevolutions;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a6da335c19c0dfd2a914ec4c08e76a01f" kindref="member">isRightBranch</ref><sp/>=<sp/>aIsRightBranch;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>number<sp/>of<sp/>revolutions<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a85a8176d44d76522c7294003d6c438f0" kindref="member">sanityCheckNumberOfRevolutions</ref>(<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>problem<sp/>solving<sp/>for<sp/>new<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a12b1d8e5895d3e73bd6c8b9a462c90ae" kindref="member">execute</ref>(<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a631d7f7fafb29a70736339d8880b9573" kindref="member">MultiRevolutionLambertTargeterIzzo::getMaximumNumberOfRevolutions</ref>(<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classtudat_1_1mission__segments_1_1LambertTargeter_1aa9dd030ab3e408d72f44c4f9ea2fe03a" kindref="member">solved</ref><sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a0b9fc55e3bf9ddb1ffbc51c7202f1cda" kindref="member">transformDimensions</ref>(<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a85a8176d44d76522c7294003d6c438f0" kindref="member">sanityCheckNumberOfRevolutions</ref>(<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a39d81688a72b0ff52cb5e938ea5af1c4" kindref="member">maximumNumberOfRevolutions</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a85a8176d44d76522c7294003d6c438f0" kindref="member">MultiRevolutionLambertTargeterIzzo::sanityCheckNumberOfRevolutions</ref>(<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>yet<sp/>defined,<sp/>calculate<sp/>number<sp/>of<sp/>revolutions<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a39d81688a72b0ff52cb5e938ea5af1c4" kindref="member">maximumNumberOfRevolutions</ref><sp/>==<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a13989fb53b66d6f5ddc3eb3283a9dd0d" kindref="member">NO_MAXIMUM_REVOLUTIONS</ref><sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporarily<sp/>store<sp/>specified<sp/>number,<sp/>as<sp/>numberOfRevolutions<sp/>is<sp/>needed<sp/>to<sp/>calculate<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>a<sp/>tricky<sp/>way<sp/>to<sp/>work,<sp/>but<sp/>on<sp/>the<sp/>other<sp/>hand<sp/>this<sp/>makes<sp/>this<sp/>approach<sp/>decidedly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>from<sp/>PyKEP<sp/>routines<sp/>and<sp/>it<sp/>also<sp/>happens<sp/>only<sp/>once<sp/>per<sp/>object).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copyOfOriginalNumberOfRevolutions<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>first<sp/>guess<sp/>of<sp/>maximum,<sp/>by<sp/>dividing<sp/>the<sp/>time<sp/>of<sp/>flight<sp/>of<sp/>the<sp/>minimum<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ellipse<sp/>by<sp/>the<sp/>normalized<sp/>time<sp/>of<sp/>flight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1ab55d302f257841e2f4caf7e52f8955c4" kindref="member">normalizedTimeOfFlight</ref><sp/>/<sp/>(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mathematical_constants::PI<sp/>/<sp/>2.0</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::sqrt(<sp/>2.0<sp/>*<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>guess<sp/>for<sp/>the<sp/>maximum<sp/>is<sp/>non-zero,<sp/>then<sp/>additional<sp/>analysis<sp/>is<sp/>required<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>correct<sp/>maximum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>try-block<sp/>is<sp/>meant<sp/>to<sp/>check<sp/>whether<sp/>the<sp/>solution<sp/>converges<sp/>or<sp/>not.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>guess<sp/>for<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>revolutions<sp/>is<sp/>correct,<sp/>then<sp/>the<sp/>problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>converge.<sp/>If<sp/>it<sp/>does<sp/>not,<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>stating<sp/>that<sp/>it<sp/>did<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>converge.<sp/>Catching<sp/>this<sp/>exception<sp/>allows<sp/>to<sp/>decrease<sp/>the<sp/>guess<sp/>only<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception<sp/>occurs,<sp/>and<sp/>not<sp/>under<sp/>other<sp/>circumstances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>root<sp/>(no<sp/>further<sp/>information<sp/>is<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a4dd9cff148719f99c31ace8234cef3dd" kindref="member">computeRootTimeOfFlight</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/>basic_mathematics::ConvergenceException<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>rootfinder<sp/>did<sp/>not<sp/>converge,<sp/>then<sp/>the<sp/>current<sp/>guess<sp/>is<sp/>wrong<sp/>and<sp/>needs<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>decreased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref>--;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>further<sp/>analysis<sp/>is<sp/>needed<sp/>of<sp/>the<sp/>current<sp/>guess<sp/>is<sp/>equal<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>is<sp/>now<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a39d81688a72b0ff52cb5e938ea5af1c4" kindref="member">maximumNumberOfRevolutions</ref><sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reinstating<sp/>original<sp/>number<sp/>of<sp/>revolutions<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>=<sp/>copyOfOriginalNumberOfRevolutions;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default:<sp/>compare<sp/>maximum<sp/>with<sp/>specified<sp/>number<sp/>of<sp/>revolutions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>specified<sp/>is<sp/>larger<sp/>than<sp/>maximum,<sp/>no<sp/>solution<sp/>is<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>&gt;<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a39d81688a72b0ff52cb5e938ea5af1c4" kindref="member">maximumNumberOfRevolutions</ref><sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Throw<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>revolutions<sp/>specified<sp/>in<sp/>Lambert<sp/>problem<sp/>is<sp/>larger<sp/>than<sp/>possible.<sp/>Specified<sp/>number<sp/>of<sp/>revolutions<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>)<sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>while<sp/>the<sp/>maximum<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a39d81688a72b0ff52cb5e938ea5af1c4" kindref="member">maximumNumberOfRevolutions</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Else,<sp/>nothing<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a12b1d8e5895d3e73bd6c8b9a462c90ae" kindref="member">MultiRevolutionLambertTargeterIzzo::execute</ref>(<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a16e6bfdeadb36d16cf55f08b5ed25727" kindref="member">sanityCheckTimeOfFlight</ref>(<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a896eb162d193d0112ee40bd367b47d09" kindref="member">sanityCheckGravitationalParameter</ref>(<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a0b9fc55e3bf9ddb1ffbc51c7202f1cda" kindref="member">transformDimensions</ref>(<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*//<sp/>Sanity<sp/>check<sp/>for<sp/>number<sp/>of<sp/>revolutions<sp/>(must<sp/>be<sp/>after<sp/>dimension<sp/>removal).</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>sanityCheckNumberOfRevolutions(<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>base<sp/>class<sp/>function<sp/>that<sp/>works<sp/>on<sp/>zero<sp/>revolutions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a1cb96dd1627e781c996d38b9303a57df" kindref="member">ZeroRevolutionLambertTargeterIzzo::execute</ref>(<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>multi-rev<sp/>root.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multipleRevolutionXParameter<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a4dd9cff148719f99c31ace8234cef3dd" kindref="member">computeRootTimeOfFlight</ref>(<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconstruct<sp/>velocities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a198b12eafe08a9a66900ee81fc215d20" kindref="member">computeVelocities</ref>(<sp/>multipleRevolutionXParameter<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1mission__segments_1_1LambertTargeter_1aa9dd030ab3e408d72f44c4f9ea2fe03a" kindref="member">solved</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a757b698ee15bb15678118698cf178a0e" kindref="member">MultiRevolutionLambertTargeterIzzo::computeTimeOfFlight</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xParameter<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>semi-major<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semiMajorAxis<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1addb8147855117bb086dd07f28b766f93" kindref="member">normalizedMinimumEnergySemiMajorAxis</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(<sp/>1.0<sp/>-<sp/>xParameter<sp/>*<sp/>xParameter<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>x<sp/>&lt;<sp/>1,<sp/>the<sp/>solution<sp/>is<sp/>an<sp/>ellipse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xParameter<sp/>&lt;<sp/>1.0<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha<sp/>parameter<sp/>in<sp/>Lagrange&apos;s<sp/>equation<sp/>(no<sp/>explanation<sp/>available).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alphaParameter<sp/>=<sp/>2.0<sp/>*<sp/>std::acos(<sp/>xParameter<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beta<sp/>parameter<sp/>in<sp/>Lagrange&apos;s<sp/>equation<sp/>(no<sp/>explanation<sp/>available).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>betaParameter;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>long<sp/>transfer<sp/>arc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a8049243b12a78c7308869558583d6558" kindref="member">isLongway</ref><sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>betaParameter<sp/>=<sp/>-2.0<sp/>*<sp/>std::asin(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sqrt(<sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref><sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a7f243a99425c70154c051269459046c9" kindref="member">normalizedChord</ref><sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(<sp/>2.0<sp/>*<sp/>semiMajorAxis<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>short<sp/>transfer<sp/>arc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>betaParameter<sp/>=<sp/>2.0<sp/>*<sp/>std::asin(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sqrt(<sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref><sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a7f243a99425c70154c051269459046c9" kindref="member">normalizedChord</ref><sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(<sp/>2.0<sp/>*<sp/>semiMajorAxis<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time-of-flight<sp/>according<sp/>to<sp/>Lagrange<sp/>including<sp/>multiple<sp/>revolutions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1LambertTargeter_1a74f0ac221b22693ba7fe0b7398007e9b" kindref="member">timeOfFlight</ref><sp/>=<sp/>semiMajorAxis<sp/>*<sp/>std::sqrt(<sp/>semiMajorAxis<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>alphaParameter<sp/>-<sp/>std::sin(<sp/>alphaParameter<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(<sp/>betaParameter<sp/>-<sp/>std::sin(<sp/>betaParameter<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>2.0<sp/>*<sp/>mathematical_constants::PI</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1abc7999d932142238f64050ec3c2d4d85" kindref="member">numberOfRevolutions</ref><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1LambertTargeter_1a74f0ac221b22693ba7fe0b7398007e9b" kindref="member">timeOfFlight</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it<sp/>is<sp/>a<sp/>hyperbola.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha<sp/>parameter<sp/>in<sp/>Lagrange&apos;s<sp/>equation<sp/>(no<sp/>explanation<sp/>available).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alphaParameter<sp/>=<sp/>2.0<sp/>*<sp/>boost::math::acosh(<sp/>xParameter<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beta<sp/>parameter<sp/>in<sp/>Lagrange&apos;s<sp/>equation<sp/>(no<sp/>explanation<sp/>available).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>betaParameter;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>long<sp/>transfer<sp/>arc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a8049243b12a78c7308869558583d6558" kindref="member">isLongway</ref><sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>betaParameter<sp/>=<sp/>-2.0<sp/>*<sp/>boost::math::asinh(<sp/>std::sqrt(<sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a7f243a99425c70154c051269459046c9" kindref="member">normalizedChord</ref><sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(<sp/>-2.0<sp/>*<sp/>semiMajorAxis<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>short<sp/>transfer<sp/>arc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>betaParameter<sp/>=<sp/>2.0<sp/>*<sp/>boost::math::asinh(<sp/>std::sqrt(<sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a5cde7bf679ff8e2099c5350dbbb103aa" kindref="member">normalizedSemiPerimeter</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a7f243a99425c70154c051269459046c9" kindref="member">normalizedChord</ref><sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(<sp/>-2.0<sp/>*<sp/>semiMajorAxis<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time-of-flight<sp/>according<sp/>to<sp/>Lagrange.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeOfFlightLagrange<sp/>=<sp/>-semiMajorAxis<sp/>*<sp/>std::sqrt(<sp/>-semiMajorAxis<sp/>)<sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>std::sinh(<sp/>alphaParameter<sp/>)<sp/>-<sp/>alphaParameter<sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(<sp/>std::sinh(<sp/>betaParameter<sp/>)<sp/>-<sp/>betaParameter<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeOfFlightLagrange;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a4dd9cff148719f99c31ace8234cef3dd" kindref="member">MultiRevolutionLambertTargeterIzzo::computeRootTimeOfFlight</ref>(<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>mathematical_constants::PI;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>initial<sp/>guesses<sp/>for<sp/>abcissae<sp/>(x)<sp/>and<sp/>ordinates<sp/>(y).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/>x2;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a6da335c19c0dfd2a914ec4c08e76a01f" kindref="member">isRightBranch</ref><sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>right<sp/>branch<sp/>solution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>std::tan(<sp/>.7234<sp/>*<sp/>PI<sp/>/<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>std::tan(<sp/>.5234<sp/>*<sp/>PI<sp/>/<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>left<sp/>branch<sp/>solution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>std::tan(<sp/>-.5234<sp/>*<sp/>PI<sp/>/<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>std::tan(<sp/>-.2234<sp/>*<sp/>PI<sp/>/<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a757b698ee15bb15678118698cf178a0e" kindref="member">computeTimeOfFlight</ref>(<sp/>std::atan(<sp/>x1<sp/>)<sp/>*<sp/>2.0<sp/>/<sp/>PI<sp/>)<sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1ab55d302f257841e2f4caf7e52f8955c4" kindref="member">normalizedTimeOfFlight</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a757b698ee15bb15678118698cf178a0e" kindref="member">computeTimeOfFlight</ref>(<sp/>std::atan(<sp/>x2<sp/>)<sp/>*<sp/>2.0<sp/>/<sp/>PI<sp/>)<sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1ab55d302f257841e2f4caf7e52f8955c4" kindref="member">normalizedTimeOfFlight</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>and<sp/>initialize<sp/>root-finding<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rootFindingError<sp/>=<sp/>1.0,<sp/>xNew<sp/>=<sp/>0.0,<sp/>yNew<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root-finding<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>rootFindingError<sp/>&gt;<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1a9fb8bc5f5b04c493d0b29f5ad4bd3565" kindref="member">convergenceTolerance</ref><sp/>)<sp/>&amp;&amp;<sp/>(<sp/>y1<sp/>!=<sp/>y2<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/>iterator<sp/>&lt;<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1afbdf81b1a06e92fe4fe0198dd3ca6877" kindref="member">maximumNumberOfIterations</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator++;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>new<sp/>x-value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xNew<sp/>=<sp/>(<sp/>x1<sp/>*<sp/>y2<sp/>-<sp/>y1<sp/>*<sp/>x2<sp/>)<sp/>/<sp/>(<sp/>y2<sp/>-<sp/>y1<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>corresponding<sp/>y-value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yNew<sp/>=<sp/><ref refid="classtudat_1_1mission__segments_1_1MultiRevolutionLambertTargeterIzzo_1a757b698ee15bb15678118698cf178a0e" kindref="member">computeTimeOfFlight</ref>(<sp/>std::atan(<sp/>xNew<sp/>)<sp/>*<sp/>2.0<sp/>/<sp/>PI<sp/>)<sp/>-<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1ab55d302f257841e2f4caf7e52f8955c4" kindref="member">normalizedTimeOfFlight</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>abcissae<sp/>and<sp/>ordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>xNew;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>yNew;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>root-finding<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootFindingError<sp/>=<sp/>std::fabs(<sp/>x1<sp/>-<sp/>xNew<sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>root-finder<sp/>has<sp/>converged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iterator<sp/>==<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1afbdf81b1a06e92fe4fe0198dd3ca6877" kindref="member">maximumNumberOfIterations</ref><sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>basic_mathematics::ConvergenceException(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multi-Revolution<sp/>Lambert<sp/>targeter<sp/>failed<sp/>to<sp/>converge<sp/>to<sp/>a<sp/>solution.<sp/>Reached<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>iterations:<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(<sp/><ref refid="classtudat_1_1mission__segments_1_1ZeroRevolutionLambertTargeterIzzo_1afbdf81b1a06e92fe4fe0198dd3ca6877" kindref="member">maximumNumberOfIterations</ref><sp/>)<sp/>);;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Revert<sp/>to<sp/>x<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xParameter<sp/>=<sp/>std::atan(<sp/>xNew<sp/>)<sp/>*<sp/>2.0<sp/>/<sp/>PI;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xParameter;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>compute<sp/>maximum<sp/>number<sp/>of<sp/>revolutions<sp/>routine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mission_segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/astro/mission_segments/multiRevolutionLambertTargeterIzzo.cpp"/>
  </compounddef>
</doxygen>
