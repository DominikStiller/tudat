<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="twoLineElementsFileReader_8cpp" kind="file" language="C++">
    <compoundname>twoLineElementsFileReader.cpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">boost/algorithm/string/trim.hpp</includes>
    <includes local="yes">Tudat/Astrodynamics/BasicAstrodynamics/orbitalElementConversions.h</includes>
    <includes local="yes">Tudat/Astrodynamics/BasicAstrodynamics/physicalConstants.h</includes>
    <includes local="yes">Tudat/InputOutput/basicInputOutput.h</includes>
    <includes local="yes">Tudat/Mathematics/BasicMathematics/mathematicalConstants.h</includes>
    <includes local="yes">Tudat/Astrodynamics/BasicAstrodynamics/stateVectorIndices.h</includes>
    <includes local="yes">Tudat/InputOutput/twoLineElementsFileReader.h</includes>
    <incdepgraph>
      <node id="10">
        <label>Tudat/Mathematics/BasicMathematics/mathematicalConstants.h</label>
      </node>
      <node id="8">
        <label>Tudat/Astrodynamics/BasicAstrodynamics/physicalConstants.h</label>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="6">
        <label>boost/algorithm/string/trim.hpp</label>
      </node>
      <node id="9">
        <label>Tudat/InputOutput/basicInputOutput.h</label>
      </node>
      <node id="12">
        <label>Tudat/InputOutput/twoLineElementsFileReader.h</label>
      </node>
      <node id="7">
        <label>Tudat/Astrodynamics/BasicAstrodynamics/orbitalElementConversions.h</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="11">
        <label>Tudat/Astrodynamics/BasicAstrodynamics/stateVectorIndices.h</label>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/twoLineElementsFileReader.cpp</label>
        <link refid="twoLineElementsFileReader_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetudat">tudat</innernamespace>
    <innernamespace refid="namespacetudat_1_1input__output">tudat::input_output</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2010-2019,<sp/>Delft<sp/>University<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>All<sp/>rigths<sp/>reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Tudat.<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>exclusively</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Modified<sp/>BSD<sp/>license.<sp/>You<sp/>should<sp/>have<sp/>received</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>the<sp/>license<sp/>with<sp/>this<sp/>file.<sp/>If<sp/>not,<sp/>please<sp/>or<sp/>visit:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>http://tudat.tudelft.nl/LICENSE.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>References</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Leloux,<sp/>J.<sp/>Filtering<sp/>Techniques<sp/>for<sp/>Orbital<sp/>Debris<sp/>Conjunction<sp/>Analysis</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>applied<sp/>to<sp/>SSN<sp/>TLE<sp/>catalog<sp/>data<sp/>and<sp/>including<sp/>astrodynamics<sp/>and</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision<sp/>probability<sp/>theory,<sp/>MSc<sp/>Literature<sp/>Research,<sp/>Delft</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>University<sp/>of<sp/>Technology,<sp/>2010.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Celestrak<sp/>(a).<sp/>Space<sp/>Track<sp/>TLE<sp/>Retriever<sp/>Help,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://celestrak.com/SpaceTrack/TLERetrieverHelp.asp,<sp/>2011.<sp/>Last</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessed:<sp/>5<sp/>August,<sp/>2011.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Space<sp/>Track.<sp/>TLE<sp/>Format,<sp/>http://www.space-track.org/tle_format.html,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2004.<sp/>Last<sp/>accessed:<sp/>5<sp/>August,<sp/>2011.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Celestrak<sp/>(b).<sp/>FAQs:<sp/>Two-Line<sp/>Element<sp/>Set<sp/>Format,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://celestrak.com/columns/v04n03/,<sp/>2006.<sp/>Last<sp/>accessed:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>August,<sp/>2011.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Celestrak<sp/>(c).<sp/>NORAD<sp/>Two-Line<sp/>Element<sp/>Set<sp/>Format,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://celestrak.com/NORAD/documentation/tle-fmt.asp,<sp/>2004.<sp/>Last</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessed:<sp/>5<sp/>August,<sp/>2011.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Raw<sp/>TLE<sp/>data<sp/>can<sp/>be<sp/>obtained<sp/>from<sp/>(Celestrak<sp/>(a),<sp/>2011).<sp/>Explanations<sp/>of<sp/>the<sp/>TLE<sp/>data</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>can<sp/>be<sp/>viewed<sp/>in<sp/>(Space<sp/>Track,<sp/>2004),<sp/>(Celestrak<sp/>(b),<sp/>2006),<sp/>and</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>(Celestrak<sp/>(c),<sp/>2004).</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string/trim.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/Astrodynamics/BasicAstrodynamics/orbitalElementConversions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/Astrodynamics/BasicAstrodynamics/physicalConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/InputOutput/basicInputOutput.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/Mathematics/BasicMathematics/mathematicalConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/Astrodynamics/BasicAstrodynamics/stateVectorIndices.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/InputOutput/basicInputOutput.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tudat/InputOutput/twoLineElementsFileReader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">input_output</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>declarations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>mathematical_constants::PI;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad8bf353b2e890c1c292588c53851d534" kindref="member">TwoLineElementsFileReader::openFile</ref>(<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1abb8c8a5f14c6e0f7800756483e094689" kindref="member">absoluteDirectoryPath_</ref>.empty(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad0012b2fb8cdaf12a59865ad79d1167d" kindref="member">absoluteFilePath_</ref><sp/>=<sp/>getTudatRootPath(<sp/>)<sp/>+<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1acb2b077b9061347178b72e704e127073" kindref="member">relativeDirectoryPath_</ref><sp/>+<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ab88309f6cb23a98893a9da0361efe1ad" kindref="member">fileName_</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad0012b2fb8cdaf12a59865ad79d1167d" kindref="member">absoluteFilePath_</ref><sp/>=<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1abb8c8a5f14c6e0f7800756483e094689" kindref="member">absoluteDirectoryPath_</ref><sp/>+<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ab88309f6cb23a98893a9da0361efe1ad" kindref="member">fileName_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>data<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a467d67eabe5cae5730d47b06a1abb015" kindref="member">dataFile_</ref>.open(<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad0012b2fb8cdaf12a59865ad79d1167d" kindref="member">absoluteFilePath_</ref>.c_str(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>could<sp/>be<sp/>opened.<sp/>Throw<sp/>exception<sp/>with<sp/>error<sp/>message<sp/>if<sp/>file<sp/>could<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a467d67eabe5cae5730d47b06a1abb015" kindref="member">dataFile_</ref>.is_open(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>file<sp/>could<sp/>not<sp/>be<sp/>opened.<sp/>Check<sp/>the<sp/>file<sp/>path<sp/>and<sp/>if<sp/>no<sp/>other&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;programs<sp/>are<sp/>using<sp/>the<sp/>file.\nCurrent<sp/>filepath:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad0012b2fb8cdaf12a59865ad79d1167d" kindref="member">absoluteFilePath_</ref><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a01715e9fb6be7bd20a8d0bbdedd94815" kindref="member">TwoLineElementsFileReader::readAndStoreData</ref>(<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>satellite<sp/>name<sp/>temporary<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>satelliteName;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>line<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placeholder<sp/>for<sp/>current<sp/>line<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>currentLine;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whilst<sp/>the<sp/>end<sp/>of<sp/>the<sp/>data<sp/>file<sp/>has<sp/>not<sp/>been<sp/>reached,<sp/>continue<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>lines<sp/>from<sp/>data<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>!<ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a467d67eabe5cae5730d47b06a1abb015" kindref="member">dataFile_</ref>.eof(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>line<sp/>of<sp/>data<sp/>from<sp/>data<sp/>file<sp/>and<sp/>store<sp/>in<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a467d67eabe5cae5730d47b06a1abb015" kindref="member">dataFile_</ref>,<sp/>currentLine<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>line<sp/>of<sp/>data<sp/>is<sp/>header<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lineCounter<sp/>&lt;=<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a79148644b718d94644ebd51102838b8c" kindref="member">numberOfHeaderLines_</ref><sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>header<sp/>line<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1ad7be6f3a7049f59a6cf6a2d802428321" kindref="member">headerLines_</ref>.push_back(<sp/>currentLine<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Else<sp/>process<sp/>non-header<sp/>data<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>storage<sp/>for<sp/>first<sp/>TLE<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>firstLine;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>first<sp/>character<sp/>is<sp/>1<sp/>or<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>currentLine.substr(<sp/>0,<sp/>2<sp/>)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLine<sp/>=<sp/>currentLine;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>second<sp/>TLE<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>secondLine;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(<sp/><ref refid="classtudat_1_1input__output_1_1TwoLineElementsFileReader_1a467d67eabe5cae5730d47b06a1abb015" kindref="member">dataFile_</ref>,<sp/>secondLine<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineCounter++;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>trailing<sp/>newline<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondLine.erase(<sp/>std::remove(<sp/>secondLine.begin(<sp/>),<sp/>secondLine.end(<sp/>),<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Concatenate<sp/>the<sp/>two<sp/>lines<sp/>and<sp/>save<sp/>in<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlePairs_[<sp/>satelliteName<sp/>]<sp/>=<sp/>firstLine<sp/>+<sp/>secondLine;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>contains<sp/>the<sp/>satellite<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>satellite<sp/>name<sp/>(remove<sp/>whitespaces<sp/>and<sp/>end-of-line<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>satelliteName<sp/>=<sp/>currentLine;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>satelliteName.find_last_not_of(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n\r\t\f\v&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>satelliteName<sp/>=<sp/>satelliteName.substr(<sp/>0,<sp/>end<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>line<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineCounter++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfObjects_<sp/>=<sp/>tlePairs_.size(<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>input_output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/twoLineElementsFileReader.cpp"/>
  </compounddef>
</doxygen>
