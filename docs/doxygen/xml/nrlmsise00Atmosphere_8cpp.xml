<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="nrlmsise00Atmosphere_8cpp" kind="file" language="C++">
    <compoundname>nrlmsise00Atmosphere.cpp</compoundname>
    <includes refid="nrlmsise00Atmosphere_8h" local="yes">tudat/astro/aerodynamics/nrlmsise00Atmosphere.h</includes>
    <includes refid="mathematicalConstants_8h" local="yes">tudat/math/basic/mathematicalConstants.h</includes>
    <incdepgraph>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="8">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="18">
        <label>Eigen/Geometry</label>
      </node>
      <node id="2">
        <label>tudat/astro/aerodynamics/nrlmsise00Atmosphere.h</label>
        <link refid="nrlmsise00Atmosphere_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="16">
        <label>Eigen/Core</label>
      </node>
      <node id="17">
        <label>tudat/astro/reference_frames/referenceFrameTransformations.h</label>
        <link refid="referenceFrameTransformations_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tudat/math/basic/basicMathematicsFunctions.h</label>
        <link refid="basicMathematicsFunctions_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>boost/random/mersenne_twister.hpp</label>
      </node>
      <node id="9">
        <label>tudat/astro/basic_astro/physicalConstants.h</label>
        <link refid="physicalConstants_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="21">
        <label>tudat/basics/basicTypedefs.h</label>
        <link refid="basicTypedefs_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tudat/astro/aerodynamics/atmosphereModel.h</label>
        <link refid="atmosphereModel_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tudat/math/basic/mathematicalConstants.h</label>
        <link refid="mathematicalConstants_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>nrlmsise-00.h</label>
      </node>
      <node id="22">
        <label>tudat/astro/aerodynamics/aerodynamics.h</label>
        <link refid="astro_2aerodynamics_2aerodynamics_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tudat/astro/aerodynamics/windModel.h</label>
        <link refid="windModel_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/astro/aerodynamics/nrlmsise00Atmosphere.cpp</label>
        <link refid="nrlmsise00Atmosphere_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>complex</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetudat">tudat</innernamespace>
    <innernamespace refid="namespacetudat_1_1aerodynamics">tudat::aerodynamics</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2010-2019,<sp/>Delft<sp/>University<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>All<sp/>rigths<sp/>reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Tudat.<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>exclusively</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Modified<sp/>BSD<sp/>license.<sp/>You<sp/>should<sp/>have<sp/>received</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>the<sp/>license<sp/>with<sp/>this<sp/>file.<sp/>If<sp/>not,<sp/>please<sp/>or<sp/>visit:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>http://tudat.tudelft.nl/LICENSE.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/astro/aerodynamics/nrlmsise00Atmosphere.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/math/basic/mathematicalConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">aerodynamics</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NRLMSISE00Atmosphere::computeProperties(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>altitude,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latitude,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>hash<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hashKey<sp/>=<sp/>hashFunc(<sp/>altitude,<sp/>longitude,<sp/>latitude,<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>hash<sp/>key<sp/>is<sp/>same<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hashKey<sp/>==<sp/>hashKey_)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>hashKey_<sp/>=<sp/>hashKey;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>input<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>inputData_<sp/>=<sp/>nrlmsise00InputFunction_(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altitude,<sp/>longitude,<sp/>latitude,<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a519ac4148a97e930fea9e5a4624f3c1a" kindref="member">apVector</ref>.begin(<sp/>),<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a519ac4148a97e930fea9e5a4624f3c1a" kindref="member">apVector</ref>.end(<sp/>),<sp/>aph_.a<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a90237ee7bf069c7a1bf5d0135bd8638d" kindref="member">switches</ref>.begin(<sp/>),<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a90237ee7bf069c7a1bf5d0135bd8638d" kindref="member">switches</ref>.end(<sp/>),<sp/>flags_.switches);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.g_lat<sp/><sp/>=<sp/>latitude<sp/>*<sp/>180.0<sp/>/<sp/>mathematical_constants::PI;<sp/></highlight><highlight class="comment">//<sp/>rad<sp/>to<sp/>deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.g_long<sp/>=<sp/>longitude<sp/>*<sp/>180.0<sp/>/<sp/>mathematical_constants::PI;<sp/></highlight><highlight class="comment">//<sp/>rad<sp/>to<sp/>deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.alt<sp/><sp/><sp/><sp/>=<sp/>altitude<sp/>*<sp/>1.0E-3;<sp/></highlight><highlight class="comment">//<sp/>m<sp/>to<sp/>km</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.year<sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a83350bb7163f51646519f9703de0d082" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.doy<sp/><sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a58fd8cbf01f7c6db102142bf4eaf5420" kindref="member">dayOfTheYear</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.sec<sp/><sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1abfffa31fb2f519c392d6f4ce38af47f4" kindref="member">secondOfTheDay</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.lst<sp/><sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1ac1591dce12d418721ea177826524c5e7" kindref="member">localSolarTime</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.f107<sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1aa8acc6d483891e09cc3ac8833ed4f768" kindref="member">f107</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.f107A<sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a4a547d100e582bfcec41b07a1f2a20ed" kindref="member">f107a</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.ap<sp/><sp/><sp/><sp/><sp/>=<sp/>inputData_.<ref refid="structtudat_1_1aerodynamics_1_1NRLMSISE00Input_1a3e40e49460a1a234b26d43a45af424ed" kindref="member">apDaily</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>input_.ap_a<sp/><sp/><sp/>=<sp/>&amp;aph_;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>NRLMSISE00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>gtd7(&amp;input_,<sp/>&amp;flags_,<sp/>&amp;output_);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>density<sp/>and<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>density_<sp/>=<sp/>output_.d[<sp/>5<sp/>]<sp/>*<sp/>1000.0;<sp/></highlight><highlight class="comment">//<sp/>GM/CM3<sp/>to<sp/>kg/M3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>temperature_<sp/>=<sp/>output_.t[1];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>number<sp/>densities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_.resize(8);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[0]<sp/>=<sp/>output_.d[0]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>HE<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[1]<sp/>=<sp/>output_.d[1]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>O<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[2]<sp/>=<sp/>output_.d[2]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>N2<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[3]<sp/>=<sp/>output_.d[3]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>O2<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[4]<sp/>=<sp/>output_.d[4]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>AR<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[5]<sp/>=<sp/>output_.d[6]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>H<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[6]<sp/>=<sp/>output_.d[7]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>N<sp/>NUMBER<sp/>DENSITY<sp/><sp/><sp/><sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>numberDensities_[7]<sp/>=<sp/>output_.d[8]<sp/>*<sp/>1.0E6<sp/>;<sp/></highlight><highlight class="comment">//<sp/>Anomalous<sp/>oxygen<sp/>NUMBER<sp/>DENSITY<sp/><sp/>(M-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>average<sp/>number<sp/>density</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumOfNumberDensity<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>numberDensities_.size(<sp/>)<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumOfNumberDensity<sp/>+=<sp/>numberDensities_[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>averageNumberDensity_<sp/>=<sp/>sumOfNumberDensity<sp/>/<sp/>double(<sp/>numberDensities_.size(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mean<sp/>molar<sp/>mass<sp/>(Thermodynamics<sp/>an<sp/>Engineering<sp/>Approach,<sp/>Michael<sp/>A.<sp/>Boles)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>=<sp/>numberDensities_[0]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a1c4e0c74563a23f5c261a9ff979af161" kindref="member">molarMassHelium</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[1]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1abc82d21b9d649bb427f9d9c677af9927" kindref="member">molarMassAtomicOxygen</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[2]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a04c2f25313e763b540d04b6f551024f5" kindref="member">molarMassNitrogen</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[3]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a5f0bb54190f91f550a5a8cd8bea60d12" kindref="member">molarMassOxygen</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[4]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a126b657eb80305e4f1b31c05e6b9510e" kindref="member">molarMassArgon</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[5]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1addddae4e15ca06d0664072ddd17a71b7" kindref="member">molarMassAtomicHydrogen</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[6]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a86ee45d846b4739d5bdd17ba3b32cacc" kindref="member">molarMassAtomicNitrogen</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>+=<sp/>numberDensities_[7]<sp/>*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a5f0bb54190f91f550a5a8cd8bea60d12" kindref="member">molarMassOxygen</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>meanMolarMass_<sp/>=<sp/>meanMolarMass_<sp/>/<sp/>sumOfNumberDensity<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speed<sp/>of<sp/>sound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>speedOfSound_<sp/>=<sp/>aerodynamics::computeSpeedOfSound(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature_,<sp/>specificHeatRatio_,<sp/>molarGasConstant_<sp/>/<sp/>meanMolarMass_<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collision<sp/>diameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>=<sp/>numberDensities_[0]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a79573f168694c923a87e460e457e0fc1" kindref="member">diameterHelium</ref><sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[1]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a7c99fbe879e09c97911ef5f8244cea2a" kindref="member">diameterAtomicOxygen</ref><sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[2]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1abce48f267ef9b7c04734576ab6215897" kindref="member">diameterNitrogen</ref><sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[3]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a44852bf0481e6121bf7496bfcd446572" kindref="member">diameterOxygen</ref><sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[4]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a0eee9fbfd1f12381cd6b61d39d723984" kindref="member">diameterArgon</ref><sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[5]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a2f2c30831b4c4f9f428c06a0bbd719cd" kindref="member">diameterAtomicHydrogen</ref><sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[6]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a59e56b9e161af4f692b682b0980238a8" kindref="member">diameterAtomicNitrogen</ref><sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>+=<sp/>numberDensities_[7]*<sp/>gasComponentProperties_.<ref refid="structtudat_1_1aerodynamics_1_1GasComponentProperties_1a7c99fbe879e09c97911ef5f8244cea2a" kindref="member">diameterAtomicOxygen</ref><sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>weightedAverageCollisionDiameter_<sp/>=<sp/>weightedAverageCollisionDiameter_<sp/>/<sp/>sumOfNumberDensity;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mean<sp/>free<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>meanFreePath_<sp/>=<sp/>aerodynamics::computeMeanFreePath(<sp/>weightedAverageCollisionDiameter_,<sp/>averageNumberDensity_<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>pressure<sp/>using<sp/>ideal<sp/>gas<sp/>law<sp/>(Thermodynamics<sp/>an<sp/>Engineering<sp/>Approach,<sp/>Michael<sp/>A.<sp/>Boles)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>useIdealGasLaw_<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_<sp/>=<sp/>density_<sp/>*<sp/>molarGasConstant_<sp/>*<sp/>temperature_<sp/>/<sp/>meanMolarMass_<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_<sp/>=<sp/>TUDAT_NAN;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">std::ostream&amp;<sp/>operator<sp/>&lt;&lt;<sp/>(<sp/>std::ostream&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRLMSISE00Input&amp;<sp/>nrlmsiseInput<sp/>){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>NRLMSISE<sp/>Input<sp/>data<sp/>object.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>input<sp/>data<sp/>is<sp/>stored<sp/>as:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Year<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.year<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Day<sp/>of<sp/>the<sp/>year<sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.dayOfTheYear<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>of<sp/>the<sp/>day<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.secondOfTheDay<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Local<sp/>solar<sp/>time<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.localSolarTime<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;f107<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.f107<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;f107a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.f107a<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;apDaily<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.apDaily<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nrlmsiseInput.apVector.size(<sp/>)<sp/>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;apVector[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.apVector[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nrlmsiseInput.switches.size(<sp/>)<sp/>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switches[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nrlmsiseInput.switches[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">std::pair&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;,<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classtudat_1_1aerodynamics_1_1NRLMSISE00Atmosphere_1ab317008d9d94f2acf51f9fc08a03975e" kindref="member">NRLMSISE00Atmosphere::getFullOutput</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>altitude,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latitude,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>computeProperties(<sp/>altitude,<sp/>longitude,<sp/>latitude,<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;,<sp/>std::vector&lt;<sp/>double<sp/>&gt;&gt;<sp/>output;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>array<sp/>members<sp/>of<sp/>struct<sp/>to<sp/>vectors<sp/>on<sp/>the<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>output.first<sp/>=<sp/>std::vector&lt;<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_.d,<sp/>output_.d<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>output_.d<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>output_.d[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>output.second<sp/>=<sp/>std::vector&lt;<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_.t,<sp/>output_.t<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>output_.t<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>output_.t[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aerodynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/astro/aerodynamics/nrlmsise00Atmosphere.cpp"/>
  </compounddef>
</doxygen>
