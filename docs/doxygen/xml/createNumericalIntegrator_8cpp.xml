<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="createNumericalIntegrator_8cpp" kind="file" language="C++">
    <compoundname>createNumericalIntegrator.cpp</compoundname>
    <includes refid="createNumericalIntegrator_8h" local="yes">tudat/math/integrators/createNumericalIntegrator.h</includes>
    <incdepgraph>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="12">
        <label>tudat/math/integrators/bulirschStoerVariableStepsizeIntegrator.h</label>
        <link refid="bulirschStoerVariableStepsizeIntegrator_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="22">
        <label>tudat/math/integrators/rungeKutta4Integrator.h</label>
        <link refid="rungeKutta4Integrator_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="9">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>tudat/math/integrators/createNumericalIntegrator.h</label>
        <link refid="createNumericalIntegrator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/math/integrators/createNumericalIntegrator.cpp</label>
        <link refid="createNumericalIntegrator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tudat/math/integrators/rungeKuttaVariableStepSizeIntegrator.h</label>
        <link refid="rungeKuttaVariableStepSizeIntegrator_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tudat/math/basic/basicMathematicsFunctions.h</label>
        <link refid="basicMathematicsFunctions_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/random/mersenne_twister.hpp</label>
      </node>
      <node id="14">
        <label>tudat/math/integrators/numericalIntegrator.h</label>
        <link refid="numericalIntegrator_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>boost/assign/std/vector.hpp</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
      <node id="24">
        <label>tudat/math/integrators/euler.h</label>
        <link refid="euler_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tudat/basics/utilityMacros.h</label>
        <link refid="utilityMacros_8h_source"/>
      </node>
      <node id="6">
        <label>tudat/basics/timeType.h</label>
        <link refid="timeType_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>tudat/basics/basicTypedefs.h</label>
        <link refid="basicTypedefs_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>tudat/math/basic/mathematicalConstants.h</label>
        <link refid="mathematicalConstants_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>deque</label>
      </node>
      <node id="29">
        <label>boost/bind.hpp</label>
      </node>
      <node id="25">
        <label>tudat/math/integrators/adamsBashforthMoultonIntegrator.h</label>
        <link refid="adamsBashforthMoultonIntegrator_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="27">
        <label>tudat/math/integrators/rungeKuttaCoefficients.h</label>
        <link refid="rungeKuttaCoefficients_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>complex</label>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>tudat/math/integrators/reinitializableNumericalIntegrator.h</label>
        <link refid="reinitializableNumericalIntegrator_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetudat">tudat</innernamespace>
    <innernamespace refid="namespacetudat_1_1numerical__integrators">tudat::numerical_integrators</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;tudat/math/integrators/createNumericalIntegrator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="3"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">numerical_integrators</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>double,<sp/>Eigen::VectorXd,</highlight></codeline>
<codeline lineno="9"><highlight class="normal">Eigen::VectorXd,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>double,<sp/>Eigen::VectorXd,<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::VectorXd(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/><ref refid="classtudat_1_1numerical__integrators_1_1IntegratorSettings" kindref="compound">IntegratorSettings&lt; double &gt;</ref><sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>double,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,</highlight></codeline>
<codeline lineno="14"><highlight class="normal">Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>double,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>double<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>Time,<sp/>Eigen::VectorXd,</highlight></codeline>
<codeline lineno="20"><highlight class="normal">Eigen::VectorXd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>Time,<sp/>Eigen::VectorXd,<sp/>long<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::VectorXd(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>Time<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>Time,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,</highlight></codeline>
<codeline lineno="25"><highlight class="normal">Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>Time,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>1<sp/>&gt;<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>Time<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>double,<sp/>Eigen::MatrixXd,</highlight></codeline>
<codeline lineno="34"><highlight class="normal">Eigen::MatrixXd,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>double,<sp/>Eigen::MatrixXd,<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::MatrixXd(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/><ref refid="classtudat_1_1numerical__integrators_1_1IntegratorSettings" kindref="compound">IntegratorSettings&lt; double &gt;</ref><sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>double,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,</highlight></codeline>
<codeline lineno="39"><highlight class="normal">Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>double,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>double<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>Time,<sp/>Eigen::MatrixXd,</highlight></codeline>
<codeline lineno="45"><highlight class="normal">Eigen::MatrixXd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>Time,<sp/>Eigen::MatrixXd,<sp/>long<sp/>double<sp/>&gt;(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::MatrixXd(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>Time<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>numerical_integrators::NumericalIntegrator&lt;<sp/>Time,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,</highlight></codeline>
<codeline lineno="50"><highlight class="normal">Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>&gt;<sp/>createIntegrator&lt;<sp/>Time,<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;&amp;<sp/>)<sp/>&gt;<sp/>stateDerivativeFunction,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>long<sp/>double,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic<sp/>&gt;<sp/>initialState,<sp/>std::shared_ptr&lt;<sp/>IntegratorSettings&lt;<sp/>Time<sp/>&gt;<sp/>&gt;<sp/>integratorSettings<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>numerical_integrators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/math/integrators/createNumericalIntegrator.cpp"/>
  </compounddef>
</doxygen>
