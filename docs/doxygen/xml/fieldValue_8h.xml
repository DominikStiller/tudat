<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fieldValue_8h" kind="file" language="C++">
    <compoundname>fieldValue.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">boost/smart_ptr/make_shared.hpp</includes>
    <includes refid="fieldTransform_8h" local="yes">tudat/io/fieldTransform.h</includes>
    <includes refid="fieldType_8h" local="yes">tudat/io/fieldType.h</includes>
    <includedby refid="parsedDataVectorUtilities_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/parsedDataVectorUtilities.h</includedby>
    <includedby refid="io_8h" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io.h</includedby>
    <includedby refid="fieldValue_8cpp" local="yes">/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/src/io/fieldValue.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="5">
        <label>tudat/io/fieldTransform.h</label>
        <link refid="fieldTransform_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="4">
        <label>boost/smart_ptr/make_shared.hpp</label>
      </node>
      <node id="7">
        <label>tudat/io/fieldType.h</label>
        <link refid="fieldType_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/fieldValue.h</label>
        <link refid="fieldValue_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/ephemerides/cartesianStateExtractor.h</label>
        <link refid="cartesianStateExtractor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/simulation/propagation_setup/propagationPatchedConicFullProblem.h</label>
        <link refid="propagationPatchedConicFullProblem_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/separatedParser.h</label>
        <link refid="separatedParser_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/extractor.h</label>
        <link refid="extractor_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/trajectory_design.h</label>
        <link refid="trajectory__design_8h_source"/>
      </node>
      <node id="3">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/trajectory_design/exportTrajectory.h</label>
        <link refid="exportTrajectory_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/dictionaryTools.h</label>
        <link refid="dictionaryTools_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/fixedWidthParser.h</label>
        <link refid="fixedWidthParser_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/fieldValue.h</label>
        <link refid="fieldValue_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/dictionaryComparer.h</label>
        <link refid="dictionaryComparer_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/ephemerides/keplerStateExtractor.h</label>
        <link refid="keplerStateExtractor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io.h</label>
        <link refid="io_8h_source"/>
      </node>
      <node id="19">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/parseSolarActivityData.h</label>
        <link refid="parseSolarActivityData_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/trajectory_design/trajectory.h</label>
        <link refid="trajectory_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/simulation/propagation_setup.h</label>
        <link refid="propagation__setup_8h_source"/>
      </node>
      <node id="17">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/textParser.h</label>
        <link refid="textParser_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/astro/ephemerides.h</label>
        <link refid="ephemerides_8h_source"/>
      </node>
      <node id="2">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/parsedDataVectorUtilities.h</label>
        <link refid="parsedDataVectorUtilities_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/extractSolarActivityData.h</label>
        <link refid="extractSolarActivityData_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtudat_1_1input__output_1_1FieldValue" prot="public">tudat::input_output::FieldValue</innerclass>
    <innernamespace refid="namespacetudat">tudat</innernamespace>
    <innernamespace refid="namespacetudat_1_1input__output">tudat::input_output</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2010-2019,<sp/>Delft<sp/>University<sp/>of<sp/>Technology</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>All<sp/>rigths<sp/>reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Tudat.<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>exclusively</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Modified<sp/>BSD<sp/>license.<sp/>You<sp/>should<sp/>have<sp/>received</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>the<sp/>license<sp/>with<sp/>this<sp/>file.<sp/>If<sp/>not,<sp/>please<sp/>or<sp/>visit:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>http://tudat.tudelft.nl/LICENSE.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TUDAT_FIELD_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TUDAT_FIELD_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/smart_ptr/make_shared.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/io/fieldTransform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tudat/io/fieldType.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetudat" kindref="compound">tudat</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">input_output</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classtudat_1_1input__output_1_1FieldValue" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtudat_1_1input__output_1_1FieldValue" kindref="compound">FieldValue</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1af22d420281b6c98a31e4d73031c12085" kindref="member">FieldValue</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType&amp;<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1aef971559bdcdf9d08782073882e161a0" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>FieldTransform<sp/>&gt;<sp/>transformer</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::shared_ptr&lt;<sp/>FieldTransform<sp/>&gt;(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classtudat_1_1input__output_1_1FieldValue_1aef971559bdcdf9d08782073882e161a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1aef971559bdcdf9d08782073882e161a0" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="50" refid="classtudat_1_1input__output_1_1FieldValue_1a2b0c0ef1510cfe80cf5bd2644c802921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a2b0c0ef1510cfe80cf5bd2644c802921" kindref="member">get</ref>(<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a8bbe59c9bab2bcfc0fb11d714345d33f" kindref="member">loadTransformation</ref>(<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::lexical_cast&lt;<sp/>T<sp/>&gt;(<sp/>transformedField<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="58" refid="classtudat_1_1input__output_1_1FieldValue_1a9cd70b9234dfba471b11242218d23c63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>T<sp/>&gt;<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a9cd70b9234dfba471b11242218d23c63" kindref="member">getPointer</ref>(<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a8bbe59c9bab2bcfc0fb11d714345d33f" kindref="member">loadTransformation</ref>(<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;<sp/>T<sp/>&gt;(<sp/>boost::lexical_cast&lt;T&gt;(<sp/>transformedField<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a3df0ef770d9892455684c493c1f2afe6" kindref="member">getTransformed</ref>(<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1ab8ca94a7853ab16819629be28607fef9" kindref="member">getRaw</ref>(<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classtudat_1_1input__output_1_1FieldValue_1a8bbe59c9bab2bcfc0fb11d714345d33f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtudat_1_1input__output_1_1FieldValue_1a8bbe59c9bab2bcfc0fb11d714345d33f" kindref="member">loadTransformation</ref>(<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>transformedField<sp/>exists<sp/>already<sp/>(lazy<sp/>cache<sp/>value).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>transformedField.empty(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>exist<sp/>yet,<sp/>load<sp/>the<sp/>transform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformedField<sp/>=<sp/>transform.get(<sp/>)<sp/>?<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*transform-&gt;transform(<sp/>rawField<sp/>).get(<sp/>)<sp/>:<sp/>rawField;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><sp/>rawField;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformedField;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>FieldTransformPointer<sp/>transform;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>FieldValue<sp/>&gt;<sp/>FieldValuePointer;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>input_output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tudat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TUDAT_FIELD_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jonashener/tudatpy_dev/tudat-bundle/tudat/include/tudat/io/fieldValue.h"/>
  </compounddef>
</doxygen>
