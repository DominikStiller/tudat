/*    Copyright (c) 2010-2018, Delft University of Technology
 *    All rigths reserved
 *
 *    This file is part of the Tudat. Redistribution and use in source and
 *    binary forms, with or without modification, are permitted exclusively
 *    under the terms of the Modified BSD license. You should have received
 *    a copy of the license with this file. If not, please or visit:
 *    http://tudat.tudelft.nl/LICENSE.
 */

#ifndef TUDAT_PATHS_HPP
#define TUDAT_PATHS_HPP

#include <stdlib.h>
#include <system_error>

#define TEST_DATA_FOLDER "@PROJECT_BINARY_DIR@/tests/data/"

#include <string.h>
#include <sys/stat.h>
#include <iostream>
#include <tudat/resource/resource.h>

namespace tudat {
    namespace paths {

        static inline std::string get_resource_path() {
            // TODO: Improve robustness of resource path. Downloading of resources if they are not found should be
            //  added. Users should be able to purge (delete) the resources after arduous use of the software, starting
            //  with no resources.
            return std::string(get_resources_path()).c_str();
        }

        static inline std::string get_tudat_data_path() {
            return get_resource_path();
        }

        static inline std::string get_tudat_path() {
            return get_resource_path();
        }

        static inline std::string get_default_output_path() {
            return get_resource_path();
        }

        static inline std::string getTudatTestDataPath() {
            return TEST_DATA_FOLDER;
        }

        static inline std::string getEphemerisDataFilesPath() {
            return std::string(get_ephemeris_path());
        }

        static inline std::string getEarthOrientationDataFilesPath() {
            return std::string(get_earth_orientation_path());
        }

        static inline std::string getQuadratureDataPath() {
            return std::string(get_quadrature_path());
        }

        static inline std::string getSpiceKernelPath() {
            return std::string(get_spice_kernels_path());
        }

        static inline std::string getAtmosphereTablesPath() {
            return std::string(get_atmosphere_tables_path());
        }

        static inline std::string getGravityModelsPath() {
            return std::string(get_gravity_models_path());
        }

        static inline std::string getSpaceWeatherDataPath() {
            return std::string(get_space_weather_path());
        }

    }
}
#endif //TUDAT_PATHS_HPP
